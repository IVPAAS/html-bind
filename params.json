{"name":"Html-bind","tagline":"Light code for basic html attribute bind to javascript scope.","body":"## Why?\r\n* HTML attribute binding is good for isolate UI&Logic.\r\n* Less code for update UI.\r\n* State driving architecture.\r\n* Light code for performance critical & light applications.\r\n\r\n## How?\r\n* Add the attribute you want to watch.\r\n* Connect the jQuery function you want to execute.\r\n* List the javascript objects you want to watch.\r\n* Let the kWatcher know all the data and that it!.\r\n\r\n## Example:\r\n```\r\n<div kshow=\"playing\" khide=\"!playing\" data-value=\"data\">\r\nPlaying\r\n</div>\r\n\r\n<input type=\"text\" onkeyup=\"$kscope.data=this.value\">\r\n\r\n<div data-value=\"data\" format=\"addSomthing\">Loading...</div>\r\n\r\n\r\n<button value=\"Play\" onclick=\"$kscope.playing = true;\">Play</button>\r\n<button value=\"Pause\" onclick=\"$kscope.playing = false\">Pause</button>\r\n\r\n<script>\r\n    var $kscope = {\r\n        playing:true,\r\n        data:\"content123\",\r\n        addSomthing:function(value){\r\n            return value  +\"123\";\r\n        }\r\n    };\r\n\r\n\r\n    var watcher = new kWatcher($kscope);\r\n\r\n    watcher.bind(\"playing\",function(prop,old,newVal)\r\n    {\r\n        console.log(prop +\":\" + old +\"--\" + newVal);\r\n    })\r\n</script>\r\n```\r\n\r\n","google":"UA-40675743-1","note":"Don't delete this file! It's used internally to help with page regeneration."}